# prefixキーをC-aに変更する
set -g prefix C-s

# C-bのキーバインドを解除する
unbind C-b

## キーストロークのディレイを減らす
#set -sg escape-time 1
#
## ウィンドウのインデックスを1から始める
#set -g base-index 1
#
## ペインのインデックスを1から始める
#setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

## C-a*2でtmux内のプログラムにC-aを送る
#bind C-a send-prefix

# v でペインを縦に分割する
bind v split-window -h

# s でペインを横に分割する
bind s split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind < resize-pane -L 3
bind - resize-pane -D 3
bind + resize-pane -U 3
bind > resize-pane -R 3

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
#set -g default-terminal "screen-256color"
set-option -g default-terminal screen-256color
#set -g terminal-overrides 'xterm:colors=256'
#set-option -g default-terminal "xterm"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

## ペインボーダーの色を設定する
#set -g pane-border-fg green
#set -g pane-border-bg black

## アクティブなペインを目立たせる
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# ステータスバーを設定する
## 左パネルを設定する
#set -g status-left-length 40
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
## 右パネルを設定する
set -g status-right-length 100
set -g status-right "#[fg=green]#(twifi)#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
### リフレッシュの間隔を設定する(デフォルト 15秒)
#set -g status-interval 60
### ウィンドウリストの位置を中心寄せにする
#set -g status-justify centre
### ヴィジュアルノーティフィケーションを有効にする
#setw -g monitor-activity on
#set -g visual-activity on

### ステータスバーを上部に表示する
#set -g status-position top
#set-option -g status-position top

# キーバインド（コピーモード）
#
bind Space copy-mode
bind p paste-buffer

# コピーモードを設定する
# viのキーバインドを使用する
setw -g mode-keys vi
## クリップボード共有を有効にする
#set-option -g default-command "reattach-to-user-namespace -l zsh"
### コピーモードの操作をvi風に設定する
## vでマーク開始
#bind -t vi-copy v begin-selection
#
## Vで行の先頭からマーク開始
#bind -t vi-copy V select-line
#
## C-vで矩形選択の切り替え
#bind -t vi-copy C-v rectangle-toggle
#
## yでヤンク
#bind -t vi-copy y copy-selection
#
## Yで1行ヤンク
#bind -t vi-copy Y copy-line
##bind-key -t vi-copy v begin-selection
##bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
##unbind -t vi-copy Enter
##bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# プラグイン一覧
set-option -g @plugin 'tmux-plugins/tmux-continuum'
set-option -g @plugin 'tmux-plugins/tmux-copycat'
set-option -g @plugin '...'

# tpmを初期化する
run '~/.tmux/plugins/tpm/tpm'

##プラグイン管理
#set -g @tpm_plugins '              \
#  tmux-plugins/tpm                 \
#  tmux-plugins/tmux-yank           \
#  tmux-plugins/tmux-open           \
#  tmux-plugins/tmux-resurrect      \
#  tmux-plugins/tmux-battery        \
#  tmux-plugins/tmux-pain-control   \
#'
#
#run-shell '~/.tmux/plugins/tpm/tpm'

## List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#
## Other examples:
## set -g @plugin 'github_username/plugin_name'
## set -g @plugin 'git@github.com/user/plugin'
## set -g @plugin 'git@bitbucket.com/user/plugin'
#
## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'
##
#set -g default-shell /bin/bash
